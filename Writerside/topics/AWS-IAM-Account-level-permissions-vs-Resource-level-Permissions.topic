<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="AWS IAM Account-level vs. Resource-level permissions" id="AWS-IAM-Account-level-permissions-vs-Resource-level-Permissions">

    <tldr><p>Resource-level permissions refer to the ability to use <code>ARN</code> to specify individual resources in a policy</p></tldr>
    <chapter title="Account-level permissions" id="account-level-permissions">
        <p> Let's examine an IAM policy allowing the creation of a VPC with a public subnet</p>
        <code-block lang="json">
            {
                "Version": "2012-10-17",
                "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                        "ec2:CreateVpc",
                        "ec2:CreateSubnet",
                        "ec2:DescribeAvailabilityZones",
                        "ec2:CreateRouteTable",
                        "ec2:CreateRoute",
                        "ec2:CreateInternetGateway",
                        "ec2:AttachInternetGateway",
                        "ec2:AssociateRouteTable",
                        "ec2:ModifyVpcAttribute"
                    ],
                    "Resource": "*"
                }
                ]
            }
        </code-block>
        <p>NOTE the line <code>"Resource": "*"</code>. This is an <b>Account-level permission</b> block.<br/>Each <code>Action</code> is permitted on any resource in the AWS account.</p>
    </chapter>
    <chapter title="Resource-level permissions" id="resource-level-permissions">
        <p>Now compare that with the policy below, which allows launching instances into a <b>specific VPC</b> </p>
        <code-block lang="json">
            {
                "Version": "2012-10-17",
                "Statement": [{
                    "Effect": "Allow",
                    "Action": "ec2:RunInstances",
                    "Resource": "arn:aws:ec2:{$region:account-id}:subnet/*",
                    "Condition": {
                        "ArnEquals": {
                            "ec2:Vpc": "arn:aws:ec2:{$region:account-id}:vpc/{$vpc-id}"
                        }
                    }
                },
                    {
                        "Effect": "Allow",
                        "Action": "ec2:RunInstances",
                        "Resource": "arn:aws:ec2:{$region}::image/ami-*",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/department": "dev"
                            }
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": "ec2:RunInstances",
                        "Resource": [
                            "arn:aws:ec2:{$region:account}:instance/*",
                            "arn:aws:ec2:{$region:account}:volume/*",
                            "arn:aws:ec2:{$region:account}:network-interface/*",
                            "arn:aws:ec2:{$region:account}:key-pair/*",
                            "arn:aws:ec2:{$region:account}:security-group/*"
                        ]
                    }
                ]
            }
        </code-block>
    <note>
        NOTE the usage of <code>Resource:</code> coupled with <code>arn:aws:...</code>. Each <code>Action</code> applies to a <b>particular resource</b>
    </note>
        <p>Action <code>ec2:RunInstances</code> requires access to subnets, AMIs, instances, volumes, network interfaces, key pairs and security groups.</p>
        <p>The first block allows access to any subnet if the VPC is matching <code>{$vpc-id}</code></p>
        <p>The middle block allows access to AMI images that are tagged with <code>"department=dev"</code> in the region <code>{$region}</code> </p>
        <p>The last block grants access to instances, volumes, network interfaces, key pairs and security groups in the <code>{$region:account}</code> location. </p>
    </chapter>
</topic>